{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h5/header.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/Junior+.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h2/Affairs.module.css"],"names":["module","exports","Header","className","s","container","to","linkClass","activeClassName","activeLinkClass","Message","props","wrapper","avatar","src","alt","messageWrapper","insideWrapper","name","message","time","messageData","HW1","Affair","priorityClass","task2name","affair","priority","task2wrapper","task2deletebtn","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","task2BtnSet","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","user","alert","HW3","setUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","form__field","key","placeholder","id","required","htmlFor","form__label","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","hw4_checkbox","checked","hw4_input","SpanName","HW4","text","setText","showAlert","setChecked","column","blue","disabled","PreJunior","Error404","Junior","JuniorPlus","PATH","Routes","path","exact","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.60bdddc6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__8WR15\",\"wrapper\":\"Message_wrapper__2wTya\",\"time\":\"Message_time__HOFTG\",\"insideWrapper\":\"Message_insideWrapper__2cK_I\",\"messageWrapper\":\"Message_messageWrapper__1DRDM\",\"avatar\":\"Message_avatar__3FT3j\",\"name\":\"Message_name__Tzmp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hw4_checkbox\":\"SuperCheckbox_hw4_checkbox__nEkYC\",\"hw4_input\":\"SuperCheckbox_hw4_input__21Ewi\",\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"SpanName\":\"SuperCheckbox_SpanName__371Aw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\",\"form__field\":\"SuperInputText_form__field__qvh33\",\"form__label\":\"SuperInputText_form__label__2pHeD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__22Pks\",\"linkClass\":\"header_linkClass__2C2zX\",\"activeLinkClass\":\"header_activeLinkClass__1uPHS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-BXUG\",\"red\":\"SuperButton_red__1kaz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\",\"testSpanError\":\"HW4_testSpanError___Mj8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__uGflL\",\"error\":\"Greeting_error__1uvQ8\"};","import React from 'react'\nimport { NavLink } from 'react-router-dom';\nimport s from './header.module.css'\n\nfunction Header() {\n    return (\n        <div className={s.container}>\n            <NavLink to='/pre-junior' className={s.linkClass} activeClassName={s.activeLinkClass}>Pre-junior</NavLink>\n            <NavLink to='/junior' >Junior</NavLink>\n            <NavLink to='/juniorPlus' >Junior+</NavLink>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport s from './Message.module.css'\n\n\ntype TypeofMessageData = {\n    avatar:string\n    name:string\n    message:string\n    time:string\n}\n\nfunction Message (props:TypeofMessageData) {\n    return (\n        <div className={s.wrapper}>\n            <div className={s.avatar}><img src={props.avatar} alt='avatar'/></div>\n            <div className={s.messageWrapper}>\n                <div className={s.insideWrapper}>\n            <div className={s.name}>{props.name}</div>\n            <div className={s.message}>{props.message}</div>\n            <div className={s.time}>{props.time}</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Pupsik',\n    message: 'Hey hey babies:)Hey hey babies:)Hey hey babies:)Hey hey babies:)Hey hey babies:)Hey hey babies:) ',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport s from './Affairs.module.css'\n\ntype AffairPropsType = {\n    affair: AffairType\n    deleteAffairCallback: (_id:number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\n    const priorityClass = s.task2name + ' ' +s[props.affair.priority]\n    return (\n        <div className={s.task2wrapper}>\n            <div className={s.task2name}>{props.affair.name}</div>\n            <div className={priorityClass}>{props.affair.priority}</div>\n            <button className={s.task2deletebtn} onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (id:number) => void\n    filter: FilterType\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')} // need to fix\n    const setHigh = () => {props.setFilter('high')}\n    const setMiddle = () => {props.setFilter('middle')}\n    const setLow = () => {props.setFilter('low')}\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button className={s.task2BtnSet} onClick={setAll}>All</button>\n            <button className={s.task2BtnSet} onClick={setHigh}>High</button>\n            <button className={s.task2BtnSet} onClick={setMiddle}>Middle</button>\n            <button className={s.task2BtnSet} onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType =  'high' | 'low' | 'middle'\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): AffairType[] => { // need to fix any\n    if (filter === 'all') return affairs\n    else if (filter === 'high') return affairs.filter(a => a.priority === 'high')\n    else if (filter === 'low') return affairs.filter(a => a.priority === 'low')\n    else if (filter === 'middle') return affairs.filter(a => a.priority === 'middle')\n    else {}\n    return []\n        //можно еще написать 'else return affairs.filter(a => a.priority === filter)'\n}\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number ): Array<AffairType> => { // need to fix any\n    return affairs.filter(a => a._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n                filter={filter}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\nimport {UserType} from \"./HW3\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: (user:string) => void // need to fix any\n    error: boolean // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ?  s.error : '' // need to fix with (?:)\n\n    return (\n        <div>\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\n            <span>{error}</span>\n            <button onClick={()=>addUser(name)}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<boolean>(false) // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { //\n        {\n            setName(e.currentTarget.value)\n            setError(false)\n        }\n\n        // need to fix\n    }\n    const addUser = (user: string) => {\n\n        if (user !== '') {\n            alert(`Hello ${user}!`)\n            addUserCallback(user)\n            setName('')\n            setError(false)\n        } else {\n            setError(true)\n        }// need to fix\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        setUsers([{_id:v1(),name:name}, ...users]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName =  ` ${error ? s.errorInput : s.form__field} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <div className=\"field\">\n                <input type={'text'}\n                       onChange={onChangeCallback}\n                       onKeyPress={onKeyPressCallback}\n                       className={finalInputClassName}\n                       placeholder=\"Your text\"\n                       name=\"name\"\n                       id='name'\n                       required\n                       {...restProps}/>\n                <label htmlFor=\"name\" className={s.form__label}>Your text</label>\n            </div>\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red + ' ' + s.default : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e);\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);// сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.hw4_checkbox}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName + ' ' + s.hw4_input}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            <span className={s.checkbox}></span>\n            {children && <span className={s.SpanName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton onClick={showAlert}>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW5 from \"../HW5\";\n\nfunction Junior() {\n    return (\n        <div>\n            <p>lalala</p>\n           {/* <HW6/>\n            <HW7/>\n            <HW8/>\n            <HW9/>\n            <HW10/>\n            <HW11/>*/}\n\n        </div>\n    )\n}\n\nexport default Junior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW5 from \"../HW5\";\n\nconst JuniorPlus = () => {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default JuniorPlus;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport {Redirect, Switch} from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport {Route} from \"react-router-dom\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/Junior+\";\n\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIORPLUS: '/juniorPlus',\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совпадение (что после '/' ничего не будет)*/}\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n            <Route path={PATH.JUNIORPLUS} render={() => <JuniorPlus/>}/>\n                // add routes\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>*/}\n            <HW5/>\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task2wrapper\":\"Affairs_task2wrapper__3OERp\",\"task2name\":\"Affairs_task2name__1iPkG\",\"low\":\"Affairs_low__1RrbR\",\"middle\":\"Affairs_middle__1oKMT\",\"high\":\"Affairs_high__3bfAG\",\"task2BtnSet\":\"Affairs_task2BtnSet__khfrM\",\"task2deletebtn\":\"Affairs_task2deletebtn__1Z3-k\"};"],"sourceRoot":""}